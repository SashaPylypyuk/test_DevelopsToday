{"version":3,"sources":["api.ts","components/Post.tsx","components/Posts.tsx","components/Pagination.tsx","components/Header.tsx","components/CreatePost.tsx","components/DeletePost.tsx","App.tsx","index.tsx"],"names":["API_URL","axios","require","default","a","get","then","res","data","postId","post","id","delete","Post","posts","useState","comm","addComment","comments","setComments","noComments","setNoComments","useParams","isWrongId","Number","parseInt","length","Promise","resolve","getComments","rawComments","preparedComments","map","comment","push","body","filter","className","title","type","value","onChange","e","target","onClick","setComment","alert","Posts","href","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","number","key","Header","CreatePosts","setTitle","setBody","name","setPost","DeletePost","setId","deletePost","App","setPosts","currentPage","setCurrentPage","loadPosts","getPosts","rawPosts","preparedPosts","indexOfLastPost","indexOfFirstPost","currentPosts","slice","path","exact","to","pageNumber","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3671d9cc.chunk.js","sourcesContent":["const API_URL = 'https://simple-blog-api.crew.red/';\n\nconst axios = require('axios').default;\n\nexport async function getPosts(): Promise<Post[]> {\n  return axios.get(`${API_URL}posts`)\n    .then(res => res.data);\n}\n\nexport async function getComments(postId: number) {\n  return axios.get(`${API_URL}posts/${postId}?_embed=comments`)\n    .then(res => res.data);\n}\n\nexport async function setPost(data) {\n  return axios.post(`${API_URL}posts`, data);\n}\n\nexport async function setComment(data) {\n  return axios.post(`${API_URL}comments`, data);\n}\n\nexport async function deletePost(id) {\n  return axios.delete(`${API_URL}posts/${id}`);\n}\n","import React, { useState, ChangeEvent } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../App.css';\nimport { getComments, setComment } from '../api';\n\nexport const Post = ({ posts }) => {\n  const [comm, addComment] = useState('');\n  const [comments, setComments] = useState<string[]>([]);\n  const [noComments, setNoComments] = useState(false);\n  let { id } = useParams();\n  let post;\n  let isWrongId = false;\n\n  id = Number.parseInt(id);\n\n  const loadComments = () => {\n    Promise.resolve(getComments(id)).then(rawComments => {\n      const preparedComments = [] as string[];\n\n      rawComments.comments.map(comment => preparedComments.push(comment.body));\n      if (!preparedComments.length) {\n        setNoComments(true);\n      }\n\n      setComments(preparedComments);\n    });\n  };\n\n  if (!comments.length && noComments) {\n    loadComments();\n  }\n\n  if (typeof (posts) === 'object') {\n    post = posts.filter(post => post.id === id);\n    post = post[0];\n  }\n\n  if (typeof (post) !== 'object') {\n    isWrongId = true;\n  }\n\n  const onChangeComment = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    addComment(value);\n  };\n\n  const createComment = () => {\n    const comment = {\n      id,\n      comm,\n    };\n\n    addComment('');\n    setComment(comment);\n\n    alert(\"comment is created!\");\n  };\n\n  return (\n    <>\n      {isWrongId ? (\n        <h1 className=\"wronPage\">\n          404\n        </h1>\n      ) : (\n        <>\n          <div className=\"singlePost\">\n            <h1 className=\"singlePost__header\">\n              {post.title}\n            </h1>\n            <h2 className=\"singlePost__body\">\n              {post.body}\n            </h2>\n          </div>\n          <div className=\"comments\">\n            {comments.length ? (comments.map(comment => (\n              <p>\n                {comment}\n              </p>\n            ))) : (\n              <p className=\"comments__empty\">\n                There are no comments\n              </p>\n            )}\n          </div>\n          <div>\n            <form className=\"form\">\n              <label>\n                Write your comment!\n              </label>\n              <input className=\"form__input\" type=\"text\" value={comm} onChange={onChangeComment} />\n              <button className=\"form__button\" type=\"button\" onClick={createComment}>\n                Comment!\n              </button>\n            </form>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport '../App.css';\n\n\nexport const Posts = ({ posts }) => {\n  return (\n\n    <section className=\"posts\">\n      {posts?.map(post => (\n        <a href={`/${post.id}`}>\n          <div className=\"post\">\n            <p className=\"post__id\">\n              id is\n              {' '}\n              {post.id}\n            </p>\n            <h2 className=\"post__text-title\">\n              {post.title}\n            </h2>\n            <p className=\"post__text-body\">\n              {post.body}\n            </p>\n          </div>\n        </a>\n\n      ))}\n    </section>\n  );\n};\n","import React from 'react';\nimport '../App.css';\n\nexport const Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [] as number[];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pageNumbers.map(number => (\n          <li key={number} className=\"pagination__page\">\n            <a onClick={() => paginate(number)} href=\"#\" className=\"pagination__link\">\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n","import React from 'react';\nimport '../App.css';\n\nexport const Header = () => (\n  <header className=\"header\">\n    <a href=\"/\">\n      <h1 className=\"header__text\">\n        Blog for DevelopsToday\n      </h1>\n    </a>\n  </header>\n);\n","import React, { useState, ChangeEvent, FC } from 'react';\nimport '../App.css';\nimport { setPost } from '../api';\n\nexport const CreatePosts: FC = () => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  const titleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    setTitle(value);\n  };\n\n  const bodyChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    const { value } = e.target;\n\n    setBody(value);\n  };\n\n  const createPost = () => {\n    const post = {\n      title,\n      body,\n    };\n\n    setTitle('');\n    setBody('');\n    setPost(post);\n\n    alert('Post created!!!');\n  };\n\n  return (\n    <div className=\"createPost__wrapper\">\n      <form className=\"form\">\n        <label>\n          Write a title\n        </label>\n        <input type=\"text\" className=\"form__input\" onChange={titleChange} value={title} />\n        <label>\n          Write a body\n        </label>\n        <textarea name=\"comment\" className=\"form__input\" onChange={bodyChange} value={body} />\n        <button className=\"form__button\" type=\"button\" onClick={createPost}>\n          Create post\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useState, ChangeEvent } from 'react';\nimport '../App.css';\nimport { deletePost } from '../api';\n\nexport const DeletePost = () => {\n  const [id, setId] = useState('');\n\n  const onChangeId = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    setId(value);\n  };\n\n  const deletePos = () => {\n    deletePost(id);\n    setId(' ');\n    alert('Post deleted!');\n  };\n\n  return (\n    <form className=\"form\">\n      <label>\n        Write an id\n      </label>\n      <input className=\"form__input\" type=\"text\" value={id} onChange={onChangeId} />\n      <button className=\"form__button\" type=\"button\" onClick={deletePos}>\n        Delete!\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport { Post } from './components/Post';\nimport './App.css';\nimport { getPosts } from './api';\nimport { Posts } from './components/Posts';\nimport { Pagination } from './components/Pagination';\nimport { Header } from './components/Header';\nimport { CreatePosts } from './components/CreatePost';\nimport { DeletePost } from './components/DeletePost';\n\n\nconst App = () => {\n  const [posts, setPosts] = useState<Post[]>();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(21);\n\n  const loadPosts = () => {\n    Promise.resolve(getPosts()).then(rawPosts => {\n      const preparedPosts = rawPosts.filter(post => post.body?.length > 0);\n\n      setPosts(preparedPosts);\n    });\n  };\n\n  if (!posts?.length) {\n    loadPosts();\n  }\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts?.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <>\n      <Header />\n      {typeof (posts) === 'object' ? (\n        <Router>\n\n          <Switch>\n            <Route path=\"/deletePost\">\n              <DeletePost />\n            </Route>\n            <Route path=\"/createPost\">\n              <CreatePosts />\n            </Route>\n            <Route exact path=\"/\">\n              <Link to=\"/createPost\">\n                <p className=\"createPost\">\n                  Creat post\n                </p>\n              </Link>\n              <Posts posts={currentPosts} />\n              <Pagination\n                postsPerPage={postsPerPage}\n                totalPosts={posts?.length}\n                paginate={paginate}\n              />\n              <Link to=\"/deletePost\">\n                <p className=\"deletePost\">\n                  Delete Post\n                </p>\n              </Link>\n            </Route>\n            <Route path=\"/:id\">\n              <Post posts={posts} />\n            </Route>\n          </Switch>\n        </Router>\n      ) : (\n        loadPosts()\n      )}\n\n    </>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}